/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/components/': RouteRecordInfo<'/components/', '/components', Record<never, never>, Record<never, never>>,
    '/components/button': RouteRecordInfo<'/components/button', '/components/button', Record<never, never>, Record<never, never>>,
    '/components/chartPie': RouteRecordInfo<'/components/chartPie', '/components/chartPie', Record<never, never>, Record<never, never>>,
    '/components/dataGrid': RouteRecordInfo<'/components/dataGrid', '/components/dataGrid', Record<never, never>, Record<never, never>>,
    '/components/dateTimePicker': RouteRecordInfo<'/components/dateTimePicker', '/components/dateTimePicker', Record<never, never>, Record<never, never>>,
    '/components/dialog': RouteRecordInfo<'/components/dialog', '/components/dialog', Record<never, never>, Record<never, never>>,
    '/components/dialog_service': RouteRecordInfo<'/components/dialog_service', '/components/dialog_service', Record<never, never>, Record<never, never>>,
    '/components/dragDrop': RouteRecordInfo<'/components/dragDrop', '/components/dragDrop', Record<never, never>, Record<never, never>>,
    '/components/form': RouteRecordInfo<'/components/form', '/components/form', Record<never, never>, Record<never, never>>,
    '/components/icons': RouteRecordInfo<'/components/icons', '/components/icons', Record<never, never>, Record<never, never>>,
    '/components/input': RouteRecordInfo<'/components/input', '/components/input', Record<never, never>, Record<never, never>>,
    '/components/popover': RouteRecordInfo<'/components/popover', '/components/popover', Record<never, never>, Record<never, never>>,
    '/components/progressBar': RouteRecordInfo<'/components/progressBar', '/components/progressBar', Record<never, never>, Record<never, never>>,
    '/components/range': RouteRecordInfo<'/components/range', '/components/range', Record<never, never>, Record<never, never>>,
    '/components/select': RouteRecordInfo<'/components/select', '/components/select', Record<never, never>, Record<never, never>>,
    '/components/select_box': RouteRecordInfo<'/components/select_box', '/components/select_box', Record<never, never>, Record<never, never>>,
    '/components/switch': RouteRecordInfo<'/components/switch', '/components/switch', Record<never, never>, Record<never, never>>,
    '/components/tabs': RouteRecordInfo<'/components/tabs', '/components/tabs', Record<never, never>, Record<never, never>>,
    '/components/textarea': RouteRecordInfo<'/components/textarea', '/components/textarea', Record<never, never>, Record<never, never>>,
    '/components/timePicker': RouteRecordInfo<'/components/timePicker', '/components/timePicker', Record<never, never>, Record<never, never>>,
    '/components/virtualScroll': RouteRecordInfo<'/components/virtualScroll', '/components/virtualScroll', Record<never, never>, Record<never, never>>,
    '/introduction/': RouteRecordInfo<'/introduction/', '/introduction', Record<never, never>, Record<never, never>>,
    '/introduction/main.css': RouteRecordInfo<'/introduction/main.css', '/introduction/main/css', Record<never, never>, Record<never, never>>,
    '/introduction/main.ts': RouteRecordInfo<'/introduction/main.ts', '/introduction/main/ts', Record<never, never>, Record<never, never>>,
    '/introduction/packageJson': RouteRecordInfo<'/introduction/packageJson', '/introduction/packageJson', Record<never, never>, Record<never, never>>,
    '/introduction/style': RouteRecordInfo<'/introduction/style', '/introduction/style', Record<never, never>, Record<never, never>>,
    '/introduction/tsconfig': RouteRecordInfo<'/introduction/tsconfig', '/introduction/tsconfig', Record<never, never>, Record<never, never>>,
    '/introduction/viteConfig': RouteRecordInfo<'/introduction/viteConfig', '/introduction/viteConfig', Record<never, never>, Record<never, never>>,
    '/sandbox/': RouteRecordInfo<'/sandbox/', '/sandbox', Record<never, never>, Record<never, never>>,
    '/sandbox/chartGantt': RouteRecordInfo<'/sandbox/chartGantt', '/sandbox/chartGantt', Record<never, never>, Record<never, never>>,
    '/sandbox/colors': RouteRecordInfo<'/sandbox/colors', '/sandbox/colors', Record<never, never>, Record<never, never>>,
    '/sandbox/datagrid': RouteRecordInfo<'/sandbox/datagrid', '/sandbox/datagrid', Record<never, never>, Record<never, never>>,
    '/sandbox/DatagridServ': RouteRecordInfo<'/sandbox/DatagridServ', '/sandbox/DatagridServ', Record<never, never>, Record<never, never>>,
    '/sandbox/DatagridServer': RouteRecordInfo<'/sandbox/DatagridServer', '/sandbox/DatagridServer', Record<never, never>, Record<never, never>>,
    '/sandbox/dragDrop': RouteRecordInfo<'/sandbox/dragDrop', '/sandbox/dragDrop', Record<never, never>, Record<never, never>>,
    '/sandbox/gantt': RouteRecordInfo<'/sandbox/gantt', '/sandbox/gantt', Record<never, never>, Record<never, never>>,
    '/sandbox/testForms': RouteRecordInfo<'/sandbox/testForms', '/sandbox/testForms', Record<never, never>, Record<never, never>>,
    '/sandbox/virScroll': RouteRecordInfo<'/sandbox/virScroll', '/sandbox/virScroll', Record<never, never>, Record<never, never>>,
    '/styles/': RouteRecordInfo<'/styles/', '/styles', Record<never, never>, Record<never, never>>,
    '/styles/Background_Text': RouteRecordInfo<'/styles/Background_Text', '/styles/Background_Text', Record<never, never>, Record<never, never>>,
    '/styles/Brand_colors': RouteRecordInfo<'/styles/Brand_colors', '/styles/Brand_colors', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/index.md': {
      routes: '/'
      views: never
    }
    'src/pages/components/index.vue': {
      routes: '/components/'
      views: never
    }
    'src/pages/components/button.md': {
      routes: '/components/button'
      views: never
    }
    'src/pages/components/chartPie.md': {
      routes: '/components/chartPie'
      views: never
    }
    'src/pages/components/dataGrid.md': {
      routes: '/components/dataGrid'
      views: never
    }
    'src/pages/components/dateTimePicker.md': {
      routes: '/components/dateTimePicker'
      views: never
    }
    'src/pages/components/dialog.md': {
      routes: '/components/dialog'
      views: never
    }
    'src/pages/components/dialog_service.md': {
      routes: '/components/dialog_service'
      views: never
    }
    'src/pages/components/dragDrop.md': {
      routes: '/components/dragDrop'
      views: never
    }
    'src/pages/components/form.md': {
      routes: '/components/form'
      views: never
    }
    'src/pages/components/icons.md': {
      routes: '/components/icons'
      views: never
    }
    'src/pages/components/input.md': {
      routes: '/components/input'
      views: never
    }
    'src/pages/components/popover.md': {
      routes: '/components/popover'
      views: never
    }
    'src/pages/components/progressBar.md': {
      routes: '/components/progressBar'
      views: never
    }
    'src/pages/components/range.md': {
      routes: '/components/range'
      views: never
    }
    'src/pages/components/select.md': {
      routes: '/components/select'
      views: never
    }
    'src/pages/components/select_box.md': {
      routes: '/components/select_box'
      views: never
    }
    'src/pages/components/switch.md': {
      routes: '/components/switch'
      views: never
    }
    'src/pages/components/tabs.md': {
      routes: '/components/tabs'
      views: never
    }
    'src/pages/components/textarea.md': {
      routes: '/components/textarea'
      views: never
    }
    'src/pages/components/timePicker.md': {
      routes: '/components/timePicker'
      views: never
    }
    'src/pages/components/virtualScroll.md': {
      routes: '/components/virtualScroll'
      views: never
    }
    'src/pages/introduction/index.vue': {
      routes: '/introduction/'
      views: never
    }
    'src/pages/introduction/main.css.md': {
      routes: '/introduction/main.css'
      views: never
    }
    'src/pages/introduction/main.ts.md': {
      routes: '/introduction/main.ts'
      views: never
    }
    'src/pages/introduction/packageJson.md': {
      routes: '/introduction/packageJson'
      views: never
    }
    'src/pages/introduction/style.md': {
      routes: '/introduction/style'
      views: never
    }
    'src/pages/introduction/tsconfig.md': {
      routes: '/introduction/tsconfig'
      views: never
    }
    'src/pages/introduction/viteConfig.md': {
      routes: '/introduction/viteConfig'
      views: never
    }
    'src/pages/sandbox/index.vue': {
      routes: '/sandbox/'
      views: never
    }
    'src/pages/sandbox/chartGantt.vue': {
      routes: '/sandbox/chartGantt'
      views: never
    }
    'src/pages/sandbox/colors.vue': {
      routes: '/sandbox/colors'
      views: never
    }
    'src/pages/sandbox/datagrid.vue': {
      routes: '/sandbox/datagrid'
      views: never
    }
    'src/pages/sandbox/DatagridServ.vue': {
      routes: '/sandbox/DatagridServ'
      views: never
    }
    'src/pages/sandbox/DatagridServer.vue': {
      routes: '/sandbox/DatagridServer'
      views: never
    }
    'src/pages/sandbox/dragDrop.vue': {
      routes: '/sandbox/dragDrop'
      views: never
    }
    'src/pages/sandbox/gantt.vue': {
      routes: '/sandbox/gantt'
      views: never
    }
    'src/pages/sandbox/testForms.vue': {
      routes: '/sandbox/testForms'
      views: never
    }
    'src/pages/sandbox/virScroll.vue': {
      routes: '/sandbox/virScroll'
      views: never
    }
    'src/pages/styles/index.vue': {
      routes: '/styles/'
      views: never
    }
    'src/pages/styles/Background_Text.md': {
      routes: '/styles/Background_Text'
      views: never
    }
    'src/pages/styles/Brand_colors.md': {
      routes: '/styles/Brand_colors'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
